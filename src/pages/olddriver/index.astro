---
import { type GetStaticPaths } from "astro";
import { Prisma } from "@prisma/client";
import prisma from "../../../prisma/db";
import { boolean } from "astro/zod";

export const getStaticPaths = (async () => {
  const drivers = await prisma.drivers.findMany();
  console.log("generating paths");
  return drivers.map((driver) => {
    return { params: { driverId: driver.driverRef } };
  });
}) satisfies GetStaticPaths;

const { driverId } = Astro.params;
type DriversInclude = { results?: boolean };
const driver = await prisma.drivers.findFirst({
  where: { driverRef: driverId },
  include: { results: true },
});
---

<div>
  <h1>Driver: {driver?.forename} {driver?.surname}</h1>
  <div>
    <h2>Results</h2>
    <ul>
      {
        driver?.results?.map((result) => (
          <div>
            <li>{result.raceId}</li>
            <li>{result.grid}</li>
            <li>{result.position}</li>
            <li>{result.points}</li>
            <li>{result.fastestLap}</li>
            <li>{result.fastestLapSpeed}</li>
            <li>{result.time}</li>
            <li>{result.rank}</li>
            <li>{result.laps}</li>
            <li>{result.milliseconds}</li>
          </div>
        ))
      }
    </ul>
  </div>
</div>
