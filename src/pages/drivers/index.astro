---
import { type GetStaticPaths } from "astro";
import { Prisma } from "@prisma/client";
import prisma from "../../../prisma/db";
import { boolean } from "astro/zod";
import BaseLayout from "../../layouts/BaseLayout.astro";
import DataTable, { type TableColumn } from "react-data-table-component";
import { ListTable } from "root/src/components/ListTable";

type DataRow = {
  driverName: string;
};

const columns: TableColumn<DataRow>[] = [
  {
    id: "driverName",
    name: "Titles",
    //selector: "driverName",
    selector: (row) => row["driverName"],
  },
  // {
  //   name: "Year",
  //   selector: "year",
  // },
];

export const getStaticPaths = (async () => {
  const drivers = await prisma.drivers.findMany();
  console.log("generating paths");
  return drivers.map((driver) => {
    return { params: { driverId: driver.driverRef } };
  });
}) satisfies GetStaticPaths;

const { driverId } = Astro.params;
const drivers = await prisma.drivers.findMany({
  include: { results: true },
});

const tableData: DataRow[] = drivers.map((d) => {
  return {
    id: d.driverId,
    driverName: `${d.forename} ${d.surname}`,
  };
});
---

<BaseLayout>
  <!-- <DataTable -->
  <!--   columns={columns} -->
  <!--   data={tableData} -->
  <!--   client:only="react" -->
  <!--   onRowClicked={({ driverName }) => { -->
  <!--     console.log("clicked"); -->
  <!--   }} -->
  <!-- /> -->
  <table>
    <thead><tr><th>name</th><th>nation</th><th>age</th></tr></thead>
    <tbody>
      {
        drivers &&
          drivers.map((driver) => (
            <tr>
              <td>
                <a
                  href={`/drivers/${driver.driverRef}`}
                >{`${driver.forename} ${driver.surname}`}</a>
              </td>
              <td>{`${driver.nationality}`}</td>
              <td>{`${new Date(driver.dob!).toDateString()}`}</td>
            </tr>
          ))
      }
    </tbody>
  </table>
</BaseLayout>
